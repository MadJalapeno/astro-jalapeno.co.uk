---
import BaseLayout from '@layouts/BaseLayout.astro';
import BlogPost from '@partials/BlogPost.astro';

const { tag } = Astro.params;
const postImports = import.meta.glob('@content/posts/*.{md,mdx}');
const posts = await Promise.all(
  Object.values(postImports).map((importPost) => importPost())
);

// Filter posts to include only those with the specified tag
const filteredPosts = posts.filter(post => {
  let postTags = post.frontmatter.tags;

  // Normalize postTags to always be an array
  if (typeof postTags === 'string') {
    postTags = [postTags];
  }

  return Array.isArray(postTags) && postTags.includes(tag);
});

// Generate static paths for all tags
export async function getStaticPaths() {
  const postImports = import.meta.glob('@content/posts/*.{md,mdx}');
  const posts = await Promise.all(
    Object.values(postImports).map((importPost) => importPost())
  );
  let tags = new Set();

  posts.forEach(post => {
    let postTags = post.frontmatter.tags;

    // Normalize postTags to always be an array
    if (typeof postTags === 'string') {
      postTags = [postTags];
    }

    if (Array.isArray(postTags)) {
      postTags.forEach(tag => tags.add(tag));
    }
  });

  return Array.from(tags).map(tag => ({ params: { tag } }));
}
---

<BaseLayout pageTitle={`Posts tagged with "${tag}"`}>
  <h1 class="text-3xl font-bold mb-6">Posts tagged with "{tag}"</h1>
  <ul class="space-y-4">
    {filteredPosts.map((post) => (
      <li key={post.url}>
        <BlogPost url={post.url} title={post.frontmatter.title} />
      </li>
    ))}
  </ul>
</BaseLayout>