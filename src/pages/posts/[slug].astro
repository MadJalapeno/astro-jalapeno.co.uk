---
import BaseLayout from '@layouts/BaseLayout.astro';
import { getCollection, render } from "astro:content";
import slugify from 'slugify';
import { Image } from 'astro:assets';

const { slug } = Astro.params;
const allPosts = await getCollection("posts");
const post = allPosts.find((p) => slugify(p.data.title, { lower: true }) === slug);

if (!post) {
  throw new Error(`Detritus says "Dat Post Not Found: ${slug}`);
}

console.log(`ðŸŸ§ `, post.data.hero, ' ðŸŸ ');

// Import the hero image statically
/*
let heroImagePath;
if (post.data.hero) {
  try {
    heroImagePath = await render(`${post.data.hero}`);
  } catch (error) {
    //throw new Error(`ðŸ”´ Hero image not found at path: ${post.data.hero}`);
  }
}
*/

// Dynamically import images
const images = import.meta.glob('/src/content/posts/images/*.{jpg,png,gif}');
let imageSrc = post.data.hero;

// Normalize the image path to match the keys in the images object
const normalizedImagePath = post.data.hero.replace('./', '/src/content/posts/');

if (images[normalizedImagePath]) {
  const imageModule = await images[normalizedImagePath]();
  imageSrc = imageModule.default;
}


// Normalize tags to always be an array
const tags = Array.isArray(post.data.tags) ? post.data.tags : [post.data.tags].filter(Boolean);

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  return allPosts.map((post) => {
    const slug = slugify(post.data.title, { lower: true });
    return { params: { slug } };
  });
}

// Render the content
const { Content } = await render(post);
const imgSrc = post.data.hero;

---

<BaseLayout pageTitle={post.data.title}>

  <div class="relative">

    <Image 
      src={imageSrc} 
      alt={post.data.title}
      class="w-full h-64 object-cover"
      />
    
    <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
      <h1 class="text-4xl font-bold text-white px-8">{post.data.title}</h1>
    </div>
  </div>
  <div class="max-w-4xl mx-auto p-6 bg-white shadow-md rounded-lg mt-6">
    <p class="text-gray-500 mb-6">{new Date(post.data.date).toLocaleDateString()}</p>
    <div class="flex items-center mb-6">
      <img src={post.data.authorImage} alt={post.data.author} class="w-10 h-10 rounded-full mr-4" />
      <p class="text-gray-700">{post.data.author}</p>
    </div>
    <div class="prose prose-lg mb-6">

      <Content />

    </div>
    <div class="flex flex-wrap gap-2">
      {tags.map(tag => (
        <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm">{tag}</span>
      ))}
    </div>
  </div>
</BaseLayout>