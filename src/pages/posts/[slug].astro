---
import BaseLayout from '@layouts/BaseLayout.astro';
import { getCollection } from "astro:content";
import slugify from 'slugify';

const allBlogPosts = await getCollection("posts");

const { slug } = Astro.params;
const posts = await Astro.glob('@content/posts/*.{md,mdx}');
const post = posts.find((p) => slugify(p.frontmatter.title, { lower: true }) === slug);

if (!post) {
  throw new Error(`Detritus says "Dat Post Not Found: ${slug}`);
}

const { frontmatter, Content } = post;

// Import the hero image dynamically
const images = import.meta.glob('/src/content/posts/images/*');
let heroImagePath;

if (frontmatter.image) {
  const imagePath = `${frontmatter.image}`;
  heroImagePath = images[imagePath];

  if (!heroImagePath) {
    throw new Error(`Hero image not found at path: ${imagePath}`);
  }
}

export async function getStaticPaths() {
  const posts = await Astro.glob('@content/posts/*.{md,mdx}');
  return posts.map((post) => {
    const slug = slugify(post.frontmatter.title, { lower: true });
    return { params: { slug } };
  });
}
---

<BaseLayout pageTitle={frontmatter.title}>
  <div class="relative">
    {heroImagePath && (
      <img src={heroImagePath} alt={frontmatter.title} class="w-full h-64 object-cover" />
    )}
    <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
      <h1 class="text-4xl font-bold text-white px-8">{frontmatter.title}</h1>
    </div>
  </div>
  <div class="max-w-4xl mx-auto p-6 bg-white shadow-md rounded-lg mt-6">
    <p class="text-gray-500 mb-6">{new Date(frontmatter.date).toLocaleDateString()}</p>
    <div class="flex items-center mb-6">
      <img src={frontmatter.authorImage} alt={frontmatter.author} class="w-10 h-10 rounded-full mr-4" />
      <p class="text-gray-700">{frontmatter.author}</p>
    </div>
    <div class="prose prose-lg mb-6">
      <Content />
    </div>
    <div class="flex flex-wrap gap-2">
      {frontmatter.tags && frontmatter.tags.map(tag => (
        <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm">{tag}</span>
      ))}
    </div>
  </div>
</BaseLayout>