---
const { content } = Astro.props;

// Function to check if the content contains an <a> tag
function containsAnchorTag(text) {
  const anchorTagPattern = /<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1.*?>(.*?)<\/a>/ig;
  return anchorTagPattern.test(text);
}

// Function to return the content as is
function returnContent(text) {
  return text;
}

// Function to convert URLs in text to HTML links
function convertUrlsToLinks(text) {
  const anchorTagPattern = /<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1.*?>(.*?)<\/a>/i;
  const match = anchorTagPattern.exec(text);
  if (match) {

      const url = match[2]; // The URL captured in the second group
      const text = match[3]; // The inner text captured in the third group

      return "<a href='" + url + "' class='text-blue-500 hover:underline'>" + text + "</a>";
    };
  return null;
}

const convertedContent = containsAnchorTag(content) ?  convertUrlsToLinks(content) : returnContent(content) ;
---

<div> <Fragment set:html={convertedContent}/> </div>